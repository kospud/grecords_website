{"version":3,"file":"static/js/931.182571c2.chunk.js","mappings":"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","sources":["Components/Contacts/Contacts.tsx","Components/FadeInComponent.tsx","Components/FadeInImage.tsx","Components/Gradient.tsx","Components/PagesBlocks.ts","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx"],"sourcesContent":["import React from 'react'\r\nimport { PageContainer, PageTopBlock } from '../PagesBlocks'\r\nimport gradient from \"../../img/contacts/custom-gradient-12-2.webp\"\r\nimport gradientMobile from \"../../img/contacts/gradient.webp\"\r\nimport { Blur, MenuItem } from '../NavBar/Menu'\r\nimport { styled } from 'styled-components'\r\nimport parse from 'html-react-parser'\r\nimport { Link } from 'react-router-dom'\r\nimport useDeviceDetect from '../../CustomHooks/UseDeviceDetect'\r\nimport Gradient from '../Gradient'\r\nimport { CONTACTS_NN_ROUTE } from '../../utils/consts'\r\n\r\nconst ContactsBlock=styled.div`\r\n  ${Blur}\r\n\r\n  box-shadow: none;\r\n  filter: none; \r\n  -webkit-filter: none; \r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n  width: 71%;\r\n  height: 64%;\r\n  border-radius: 50px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  \r\n  a{\r\n    text-align: center;\r\n    margin-top: 25svh;\r\n    height: fit-content;\r\n    transform: none;\r\n    position: static;\r\n    color: rgba(255, 255, 255, 0.8);\r\n    text-decoration: none;\r\n    font-size: 4svw;\r\n    font-weight: 400;\r\n    z-index: 1;\r\n\r\n    @media (max-width: 600px){\r\n    margin-top: 2svh;\r\n    margin-bottom: 2svh;\r\n    font-size: 8.6svw;\r\n    font-weight: 700;\r\n    letter-spacing: -0.4svw;\r\n    }\r\n\r\n  }\r\n\r\n  @media (max-width: 600px){\r\n    width: 92%;\r\n    height: 70%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst ContactMenuItem=styled(MenuItem)`\r\n    opacity: 0.8;\r\n`\r\n\r\nconst Links=[\r\n  {\r\n    title: 'Москва',\r\n    ref: ''\r\n  },\r\n  {\r\n    title: 'Нижний<br/>Новгород',\r\n    ref: CONTACTS_NN_ROUTE\r\n  },\r\n  {\r\n    title: \"Самара\",\r\n    ref: ''\r\n  }\r\n]\r\nfunction Contacts() {\r\n\r\n  const {isMobile}=useDeviceDetect();\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Gradient/>\r\n        <PageTopBlock src={isMobile? gradientMobile : gradient}>\r\n          <ContactsBlock>\r\n          {\r\n            Links.map(({title,ref})=><ContactMenuItem to={ref}>{parse(title.toUpperCase())}</ContactMenuItem>)\r\n          }\r\n          </ContactsBlock>\r\n        </PageTopBlock>\r\n    </PageContainer>\r\n  )\r\n}\r\n\r\nexport default Contacts","import React, { PropsWithChildren } from 'react'\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { styled, css } from 'styled-components'\r\n\r\ninterface FadeInProps {\r\n    inView: boolean\r\n}\r\n//Общий стиль появления для элементов \r\nconst FadeInStyle = css<FadeInProps>`\r\n    opacity: ${({ inView }) => (inView ? '1' : '0')};\r\n    transform: ${({ inView }) => (!inView ? 'translateY(4svh)' : 'none')};\r\n    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\r\n`\r\nconst FadeInDiv = styled.div<FadeInProps>`\r\n    ${FadeInStyle}\r\n`\r\n//Появляющийся заголовок\r\nconst FadeInH1 = styled.h1<FadeInProps>`\r\n    ${FadeInStyle}\r\n`\r\nconst FadeInImg = styled.img<FadeInProps>`\r\n    ${FadeInStyle}\r\n`\r\n\r\nconst FadeInA = styled.a<FadeInProps>`\r\n    ${FadeInStyle}\r\n`\r\nconst values: Record<string, any> = {\r\n    'img': FadeInImg,\r\n    'h1': FadeInH1,\r\n    'div': FadeInDiv,\r\n    'a': FadeInA\r\n}\r\n\r\ninterface FadeInComponentProps {\r\n    threshold: number;\r\n    type: string,\r\n    [key: string]: any\r\n}\r\nfunction FadeInComponent({ children, threshold, type, ...rest }: PropsWithChildren<FadeInComponentProps>) {\r\n\r\n    const { ref, inView } = useInView({\r\n        triggerOnce: true,\r\n        threshold: threshold\r\n    })\r\n\r\n    const Element = values[type]\r\n\r\n    return (\r\n        <Element inView={inView} ref={ref} {...rest}>\r\n            {children}\r\n        </Element>\r\n    )\r\n}\r\n\r\nexport default FadeInComponent","import { useInView } from \"react-intersection-observer\"\r\nimport styled from \"styled-components\"\r\n\r\ninterface FadeInImageContainerProps {\r\n    withGap?: boolean\r\n}\r\nconst FadeInImageContainer = styled.div<FadeInImageContainerProps>`\r\noverflow: hidden;\r\nwidth: ${({ withGap }) => withGap ? '95%' : \"100%\"};\r\naspect-ratio: 314/100;\r\nmargin-bottom: ${({ withGap }) => withGap ? '4svh' : \"0\"};\r\nposition: relative;\r\n\r\n@media (max-width: 600px){\r\n    aspect-ratio: none;\r\n    width: 100%;\r\n    height: 45svh;\r\n    object-position: 35% 0;\r\n    \r\n    }\r\n`\r\n\r\nconst FadeInImageBlock = styled.div<{inView: boolean}>`\r\nwidth: 100%;\r\nheight: 100%;\r\ntransform: ${({ inView }) => inView ? 'translateY(0%)' : \"translateY(-100%)\"};\r\ntransition: transform .3s ease-in-out;\r\noverflow: hidden;\r\n`\r\nconst FadeInImageImg = styled.img<{ inView: boolean }>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    scale: ${({ inView }) => inView ? '1.1' : \"1\"};\r\n    transform: ${({ inView }) => inView ? 'translateY(0)' : \"translateY(100%)\"};\r\n    //clip-path: ${({ inView }) => inView ? 'inset(0px 0px 0% 0px)' : \"inset(0px 0px 100% 0px)\"};\r\n    //-webkit-clip-path: ${({ inView }) => inView ? 'inset(0px 0px 0% 0px)' : \"inset(0px 0px 100% 0px)\"};\r\n    transition: scale 1s ease-in-out, transform .3s ease-in-out;;\r\n    //clip-path .3s ease-in-out,\r\n\r\n    @media (max-width: 600px){\r\n    object-position: 35% 0;\r\n    height: 45svh;\r\n    }\r\n`\r\ninterface FadeInImageProps {\r\n    src: string\r\n    withGap?: boolean\r\n}\r\nexport const FadeInImage = ({ src, withGap = false }: FadeInImageProps) => {\r\n\r\n    const { ref, inView } = useInView({\r\n        triggerOnce: true,\r\n        threshold: 1\r\n    })\r\n\r\n    return (\r\n        <FadeInImageContainer withGap={withGap} ref={ref}>\r\n            <FadeInImageBlock inView={inView}>\r\n                <FadeInImageImg inView={inView} src={src} />\r\n            </FadeInImageBlock>\r\n        </FadeInImageContainer>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst GradientContaner = styled.div`\r\n    position: fixed;\r\n    height: 100svh;\r\n    width: 100%;\r\n    z-index: 0;\r\n    filter: blur(20px);\r\n    -webkit-filter: blur(20px);\r\n    backdrop-filter: blur(20px);\r\n    -webkit-backdrop-filter: blur(20px);\r\n`\r\n\r\nconst Gradient1 = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: absolute;\r\n\r\n&::after{\r\n        content:'';\r\n        position: absolute;\r\n        width: 150%;\r\n        height: 150%;\r\n        top: -50%;\r\n        left: -50%;\r\n        background: radial-gradient(circle, rgba(248, 87, 14, 1) 0%, rgba(247,0,0,0) 50%);\r\n        animation: first 10s linear infinite;\r\n        overflow: visible;\r\n        will-change: transform;\r\n    }\r\n\r\n    &::before{\r\n        content:'';\r\n        position: absolute;\r\n        width: 150%;\r\n        height: 150%;\r\n        top: -50%;\r\n        left: -50%;\r\n        background: radial-gradient(circle, rgba(179, 10, 36, 1) 0%, rgba(247,0,0,0) 50%);\r\n        animation: second 10s linear infinite;\r\n        overflow: visible;\r\n        will-change: transform;\r\n    }\r\n\r\n    @keyframes first{\r\n        0% { transform: translate(-10%, -10%); }\r\n\r\n      25% { transform: translate(10%, 20%); }\r\n\r\n      50% { transform: translate(20%, 40%); }\r\n\r\n      75% { transform: translate(10%, 20%); }\r\n\r\n      100% { transform: translate(-10%, -10%); }\r\n    }\r\n\r\n    @keyframes second{\r\n        0% { transform: translate(40%, 20%); }\r\n\r\n        25% { transform: translate(30%, 30%); }\r\n\r\n        50% { transform: translate(20%, 20%); }\r\n\r\n        75% { transform: translate(30%, -10%); }\r\n\r\n        100% { transform: translate(40%, 20%); }\r\n            }\r\n`\r\n\r\nconst Gradient2 = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\nposition: absolute;\r\n\r\n&::after{\r\n        content:'';\r\n        position: absolute;\r\n        width: 150%;\r\n        height: 150%;\r\n        top: -10%;\r\n        left: -10%;\r\n        background: radial-gradient(circle, rgba(52, 12, 32, 1) 0%, rgba(247,0,0,0) 60%);\r\n        animation: move5 10s linear infinite;\r\n        overflow: visible;\r\n       // z-index: 1;\r\n       will-change: transform;\r\n    }\r\n\r\n    &::before{\r\n        content:'';\r\n        position: absolute;\r\n        width: 150%;\r\n        height: 150%;\r\n        top: -30%;\r\n        left: -30%;\r\n        background: radial-gradient(circle, rgba(18, 22, 58, 1) 0%, rgba(247,0,0,0) 50%);\r\n        animation: move4 10s linear infinite;\r\n        overflow: visible;\r\n        z-index: 1;\r\n        \r\n    }\r\n\r\n    @keyframes move4{\r\n        0% { transform: translate(30%, 0%); }\r\n\r\n      25% { transform: translate(25%, 20%); }\r\n\r\n      50% { transform: translate(10%, 40%); }\r\n\r\n      75% { transform: translate(20%, 20%); }\r\n\r\n      100% { transform: translate(30%, 0%); }\r\n    }\r\n\r\n    @keyframes move5{\r\n        0% { transform: translate(-30%, 30%); }\r\n\r\n        25% { transform: translate(-30%, -10%); }\r\n\r\n        50% { transform: translate(30%, -60%); }\r\n\r\n        75% { transform: translate(5%, -10%); }\r\n\r\n        100% { transform: translate(-30%, 30%); }\r\n            }\r\n`\r\n\r\nconst Gradient3 = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n\r\n    &::after{\r\n            content:'';\r\n            position: absolute;\r\n            width: 150%;\r\n            height: 150%;\r\n            top: -40%;\r\n            left: -60%;\r\n            background: radial-gradient(circle, rgba(239, 11, 27, 1) 0%, rgba(247,0,0,0) 50%);\r\n            animation: move6 10s linear infinite;\r\n            overflow: visible;\r\n            \r\n        }\r\n\r\n    @keyframes move6{\r\n        0% { transform: translate(10%, 10%); }\r\n\r\n        25% { transform: translate(10%, 0%); }\r\n\r\n        50% { transform: translate(0, -10&); }\r\n\r\n        75% { transform: translate(20%, 0%); }\r\n\r\n        100% { transform: translate(10%, 10%); }\r\n    }\r\n`\r\nfunction Gradient() {\r\n    return (\r\n        <GradientContaner>\r\n            <Gradient1>\r\n                <Gradient2>\r\n                    <Gradient3>\r\n\r\n                    </Gradient3>\r\n                </Gradient2>\r\n            </Gradient1>\r\n        </GradientContaner>\r\n    )\r\n}\r\n\r\nexport default Gradient","import styled, { css } from \"styled-components\"\r\nimport FadeInComponent from \"./FadeInComponent\"\r\nimport { FadeInImage } from \"./FadeInImage\"\r\n//Контейнер страницы\r\nexport const PageContainer = styled.div`\r\nwidth: 100%;\r\nbackground-color: rgba(30, 30, 30, 1);\r\nscroll-behavior: smooth;\r\n`\r\ninterface TopBlockProps {\r\n    src: string\r\n}\r\n//Верхний блок\r\nexport const PageTopBlock = styled.div<TopBlockProps>`\r\n//background-image: ${({ src }) => `url(${src})`};\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\nheight: 100svh;\r\nposition: relative;\r\n\r\na{\r\n    position: absolute;\r\n    top:50%;\r\n    left:50%;\r\n    width: 71%;\r\n    transform:translate(-50%, -50%); \r\n\r\n    font-size: 4svw;\r\n    text-align: center;\r\n    font-weight: 600;\r\n\r\n    @media (max-width: 600px){\r\n        font-size: 36px;\r\n        text-align: left;\r\n        width: 79%;\r\n    }\r\n    @media (max-width: 360px){\r\n        font-size: 32px;\r\n      }\r\n}\r\n\r\nimg{\r\n    position: absolute;\r\n    top: 76%;\r\n    left: 95%;\r\n    width: 2%;\r\n}\r\n`\r\n//контент\r\nexport const PageContent = styled.div`\r\nposition: relative;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\n`\r\n\r\n//Большой заголовок\r\nexport const BigHeader = styled(FadeInComponent)`\r\nmargin: 0;\r\nmargin-top: -2.2svw;\r\nmargin-bottom: 4.2svh;\r\nwidth: 100%;\r\nfont-size: 10svw;\r\ntext-align: center;\r\nfont-weight: 900;\r\nletter-spacing: -0.4svw;\r\n\r\n@media (max-width: 600px){\r\n    font-size: 14svw;\r\n    margin-top: 2.7svh;\r\n    margin-bottom: 4svh;\r\n}\r\n`\r\n//Элемент картинки на всю ширину экрана\r\nexport const FullWidthImg = styled(FadeInImage)`\r\n    width: 100%;\r\n\r\nimg{\r\n    //width: 100%;\r\n    object-fit: cover;\r\n\r\n    @media (max-width: 600px){\r\n    height: 45svh;\r\n    object-position: 35% 0;\r\n    overflow: hidden;\r\n    }\r\n}\r\n`\r\n//Блок с колонками\r\nexport const ColumnsBlock = styled(FadeInComponent)`\r\nwidth: 95%;\r\ndisplay: flex;\r\nmargin-top: 4.2svh;\r\nmargin-bottom: 8svh;\r\n\r\n@media (max-width: 600px){\r\n    flex-direction: column;\r\n    margin-top: 2.1svh;\r\n    margin-bottom: 4svh;\r\n}\r\n`\r\n//Заголовок поменьше\r\nexport const ColumnsBlockHeader = styled.h2`\r\n    margin: 0;\r\n    font-size: 36px;\r\n    font-weight: 400;\r\n    flex-grow: 1;\r\n    max-width: 40%;\r\n\r\n    @media (max-width: 1600px){\r\n        font-size: 32px;\r\n      }\r\n\r\n    @media (max-width: 1400px){\r\n        font-size: 28px;\r\n      }\r\n\r\n    @media (max-width: 600px){\r\n      font-size: 16px;\r\n      max-width: 100%;\r\n      padding-left: 3%;\r\n    }\r\n\r\n    @media (max-width: 360px){\r\n        font-size: 24px;\r\n      }\r\n`\r\n//стиль для текста в колонках\r\nexport const ColumnsTextStyle = css`\r\n    font-size: 18px;\r\n    font-weight: 300;\r\n\r\n    @media (max-width: 1600px){\r\n        font-size: 16px;\r\n      }\r\n\r\n    @media (max-width: 1400px){\r\n        font-size: 14px;\r\n      }\r\n\r\n    @media (max-width: 600px){\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media (max-width: 360px){\r\n        font-size: 14px;\r\n      }\r\n`\r\n//Текст, занимающий две колонки\r\nexport const TwoColumnsText = styled.div`\r\n    width: 40%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-right: 5px;\r\n    ${ColumnsTextStyle}\r\n\r\n    a{\r\n        display: block;\r\n        width: 94%;\r\n    }\r\n\r\n    @media (max-width: 800px){\r\n        width: 60%\r\n        \r\n    }\r\n\r\n    @media (max-width: 600px){\r\n    width: 100%;\r\n    align-items: center;\r\n    }\r\n\r\n`\r\n//Текст, занимающий одну колонку\r\nexport const OneColumnText = styled.div`\r\n    ${ColumnsTextStyle}\r\n    width: 20%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    a{\r\n        display: block;\r\n        width: 94%;\r\n    }\r\n\r\n    @media (max-width: 800px){\r\n        width: 30%;\r\n    }\r\n\r\n    @media (max-width: 600px){\r\n    width: 100%;\r\n    align-items: center;\r\n    }\r\n`\r\n//Большой мотивирующий текст\r\nexport const BigMotivationText = styled(FadeInComponent)`\r\n    font-size: 4svw; \r\n    margin-top: 11svh;\r\n    margin-bottom: 1.4svh;\r\n    grid-column-start: 1;\r\n    grid-column-end: 7;\r\n    text-align: center;\r\n    width: 95%;\r\n    height: fit-content;\r\n    font-weight: 500;\r\n\r\n    @media (max-width: 600px){\r\n        width: 99%;\r\n        font-size: 7svw;\r\n        margin-top: 8svh;\r\n        margin-bottom: 4svh;\r\n    }\r\n`\r\n//Пространство в flex контейнере\r\nexport const Spacer = styled.div`\r\n    flex-grow: 1;\r\n    height: 4svh;\r\n    @media (max-width: 800px){\r\n        min-width: 10%;\r\n    }\r\n`\r\n//Блок с картинками\r\nexport const ImgCarousel = styled(FadeInComponent)`\r\ndisplay: flex;\r\nwidth: 95%;\r\noverflow-x: auto;\r\nmargin-bottom: 7.4svh;\r\njustify-content: space-between;\r\n@media (max-width: 600px){\r\n    width: 100%;\r\n}\r\n`\r\n//Элемент блока с картинками\r\nexport const ImgCarouselItem = styled.div`\r\nwidth: 20%;\r\nflex-shrink: 0;\r\n//justify-content: flex-end;\r\n//display: flex;\r\n    img{\r\n        width: 94%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    @media (max-width: 800px){\r\n        width: 30%;\r\n    }\r\n\r\n    @media (max-width: 600px){\r\n    width: 72%;\r\n    \r\n    //max-width: none;\r\n    }\r\n`\r\n//Текстовый блок элемента с картинками шириной в 1 столбец\r\nexport const ImgCarouselTextItem = styled(ImgCarouselItem)`\r\n    a{\r\n        display: block;\r\n        width: 94%;\r\n        ${ColumnsTextStyle}\r\n    }\r\n\r\n    @media (max-width: 600px){\r\n        width: 82%;\r\n        margin-left: 4%;\r\n    }\r\n`\r\n//Широкая картинка с отступами\r\nexport const ImgWithGap = styled(FullWidthImg)`\r\n    width: 95%;\r\n    margin-bottom: 4svh;\r\n\r\n    @media (max-width: 600px){\r\n        width: 100%;\r\n    }\r\n`\r\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["ContactsBlock","styled","div","_templateObject","_taggedTemplateLiteral","Blur","ContactMenuItem","MenuItem","_templateObject2","Links","title","ref","CONTACTS_NN_ROUTE","isMobile","useDeviceDetect","_jsxs","PageContainer","children","_jsx","Gradient","PageTopBlock","src","gradientMobile","gradient","map","_ref","to","parse","toUpperCase","FadeInStyle","css","inView","_ref2","FadeInDiv","FadeInH1","h1","_templateObject3","values","img","_templateObject4","a","_templateObject5","_ref3","threshold","type","rest","useInView","triggerOnce","Element","FadeInImageContainer","withGap","FadeInImageBlock","FadeInImageImg","_ref4","_ref5","_ref6","_ref7","FadeInImage","_ref8","GradientContaner","Gradient1","Gradient2","Gradient3","concat","PageContent","BigHeader","FadeInComponent","FullWidthImg","ColumnsBlock","_templateObject6","ColumnsBlockHeader","h2","_templateObject7","ColumnsTextStyle","_templateObject8","TwoColumnsText","_templateObject9","OneColumnText","_templateObject10","BigMotivationText","_templateObject11","Spacer","_templateObject12","ImgCarousel","_templateObject13","ImgCarouselItem","_templateObject14","ImgCarouselTextItem","_templateObject15","_templateObject16","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","delay","rootMargin","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}